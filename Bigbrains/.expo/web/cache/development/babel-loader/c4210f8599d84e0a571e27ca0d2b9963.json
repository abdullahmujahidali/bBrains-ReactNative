{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BigBrains-Mobile\\\\Bigbrains\\\\screens\\\\LoginScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from \"expo-status-bar\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, TextInput } from \"react-native-paper\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction LoginScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var sendCredentials = function sendCredentials() {\n    return _regeneratorRuntime.async(function sendCredentials$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fetch(\"https://bbrains.herokuapp.com/signin\", {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                \"email\": email,\n                \"password\": password\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function _callee(data) {\n              return _regeneratorRuntime.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return _regeneratorRuntime.awrap(AsyncStorage.setItem('token', data.token));\n\n                    case 3:\n                      props.navigation.replace(\"profile\");\n                      _context.next = 9;\n                      break;\n\n                    case 6:\n                      _context.prev = 6;\n                      _context.t0 = _context[\"catch\"](0);\n                      console.log(_context.t0);\n\n                    case 9:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[0, 6]], Promise);\n            });\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.mainD,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.logoStyle,\n    source: require(\"../assets/logoBlack.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.subIntro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Proceed with your\"), React.createElement(Text, {\n    style: styles.intro,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \" Login\"), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    underlineColor: \"\",\n    label: \"Email\",\n    mode: \"flat\",\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    secureTextEntry: true,\n    label: \"Password\",\n    mode: \"flat\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: styles.btnStyle,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return sendCredentials();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"SIGN IN\"), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"signup\");\n    },\n    style: styles.subText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"I'm a new user \", React.createElement(Text, {\n    style: styles.spIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 28\n    }\n  }, \" Sign Up\"), \" \"))));\n}\n\nvar styles = StyleSheet.create({\n  mainD: {\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  intro: {\n    fontSize: 30,\n    marginLeft: 15,\n    marginTop: 10,\n    color: \"#3b3b3b\",\n    fontWeight: \"bold\"\n  },\n  spIn: {\n    fontWeight: \"bold\",\n    color: \"blue\"\n  },\n  subIntro: {\n    marginTop: 10,\n    fontSize: 20,\n    marginLeft: 18,\n    color: \"black\"\n  },\n  selfClosing: {\n    borderBottomColor: \"red\",\n    borderBottomWidth: 2,\n    marginLeft: 120,\n    marginRight: 100,\n    marginTop: 0,\n    marginBottom: 5\n  },\n  txtLabel: {\n    marginTop: 10,\n    marginLeft: 15\n  },\n  titleM: {\n    fontSize: 30,\n    marginLeft: 18,\n    marginTop: 15,\n    textAlign: \"center\"\n  },\n  bckBtn: {\n    backgroundColor: \"white\"\n  },\n  bckBtnHead: {\n    backgroundColor: \"white\",\n    borderBottomColor: \"white\"\n  },\n  textInpStyle: {\n    marginLeft: 18,\n    marginRight: 18,\n    marginTop: 10,\n    backgroundColor: \"white\"\n  },\n  btnStyle: {\n    marginLeft: 18,\n    marginRight: 18,\n    marginTop: 30,\n    backgroundColor: \"black\",\n    textShadowColor: \"white\",\n    borderRadius: 35\n  },\n  subText: {\n    fontSize: 15,\n    marginLeft: 18,\n    marginTop: 10,\n    textAlign: \"center\"\n  },\n  logoStyle: {\n    marginLeft: 125,\n    marginTop: 100,\n    height: 140,\n    width: 130,\n    marginBottom: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["F:/BigBrains-Mobile/Bigbrains/screens/LoginScreen.js"],"names":["StatusBar","React","useState","Button","TextInput","AsyncStorage","LoginScreen","props","email","setEmail","password","setPassword","sendCredentials","fetch","method","headers","body","JSON","stringify","then","res","json","data","setItem","token","navigation","replace","console","log","styles","mainD","logoStyle","require","subIntro","intro","textInpStyle","colors","primary","text","btnStyle","navigate","subText","spIn","StyleSheet","create","backgroundColor","container","flex","alignItems","justifyContent","fontSize","marginLeft","marginTop","color","fontWeight","selfClosing","borderBottomColor","borderBottomWidth","marginRight","marginBottom","txtLabel","titleM","textAlign","bckBtn","bckBtnHead","textShadowColor","borderRadius","height","width"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React,{useState} from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Image,\r\n} from \"react-native\";\r\nimport { Button, TextInput } from \"react-native-paper\";\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nfunction LoginScreen(props) {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const sendCredentials = async () => {\r\n    fetch(\"https://bbrains.herokuapp.com/signin\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n\r\n        \"email\": email,\r\n        \"password\": password,\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then( async data => {\r\n        try {\r\n          await AsyncStorage.setItem('token',data.token)\r\n          props.navigation.replace(\"profile\")\r\n        \r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n  return (\r\n    <View style={styles.mainD}>\r\n      <KeyboardAvoidingView behavior=\"position\">\r\n        <StatusBar\r\n          style=\"dark\"\r\n          backgroundColor=\"black\"\r\n          barStyle=\"light-content\"\r\n        />\r\n        <Image\r\n          style={styles.logoStyle}\r\n          source={require(\"../assets/logoBlack.png\")}\r\n        />\r\n\r\n        <Text style={styles.subIntro}>Proceed with your</Text>\r\n        <Text style={styles.intro}> Login</Text>\r\n\r\n        <TextInput\r\n          style={styles.textInpStyle}\r\n          theme={{ colors: { primary: \"red\" } }}\r\n          underlineColor=\"\"\r\n          label=\"Email\"\r\n          mode=\"flat\"\r\n          onChangeText={(text) => setEmail(text)}\r\n        />\r\n        <TextInput\r\n          style={styles.textInpStyle}\r\n          theme={{ colors: { primary: \"red\" } }}\r\n          secureTextEntry={true} \r\n          label=\"Password\"\r\n          mode=\"flat\"\r\n          onChangeText={(text) => setPassword(text)}\r\n        />\r\n        <Button\r\n          style={styles.btnStyle}\r\n          mode=\"contained\"\r\n          onPress={() => sendCredentials()}\r\n        >\r\n          SIGN IN\r\n        </Button>\r\n        <TouchableOpacity>\r\n          <Text\r\n            onPress={() => props.navigation.navigate(\"signup\")}\r\n            style={styles.subText}\r\n          >\r\n            I'm a new user <Text style={styles.spIn}> Sign Up</Text>{\" \"}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n      </View>\r\n  );\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n    mainD:{\r\n        backgroundColor: 'white',\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: 'white',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    intro: {\r\n        fontSize: 30,\r\n        marginLeft: 15,\r\n        marginTop: 10,\r\n        color: \"#3b3b3b\",\r\n        fontWeight: \"bold\"\r\n    },\r\n    spIn: {\r\n        fontWeight: \"bold\",\r\n    \r\n        color: \"blue\"\r\n    },\r\n    subIntro: {\r\n        marginTop: 10,\r\n        fontSize: 20,\r\n        marginLeft: 18,\r\n        color: \"black\"\r\n    },\r\n    selfClosing: {\r\n        borderBottomColor: \"red\",\r\n        borderBottomWidth: 2,\r\n        marginLeft: 120,\r\n        marginRight: 100,\r\n        marginTop: 0,\r\n        marginBottom: 5\r\n    },\r\n    txtLabel: {\r\n        marginTop: 10,\r\n        marginLeft: 15,\r\n    },\r\n    titleM: {\r\n        fontSize: 30,\r\n        marginLeft: 18,\r\n        marginTop: 15,\r\n        textAlign: \"center\"\r\n    },\r\n    bckBtn: {\r\n        backgroundColor: \"white\"\r\n    },\r\n    bckBtnHead: {\r\n        backgroundColor: \"white\",\r\n        borderBottomColor: \"white\"\r\n    },\r\n    textInpStyle: {\r\n        marginLeft: 18,\r\n        marginRight: 18,\r\n        marginTop: 10,\r\n        backgroundColor: \"white\"\r\n    },\r\n    btnStyle: {\r\n        marginLeft: 18,\r\n        marginRight: 18,\r\n        marginTop: 30,\r\n        backgroundColor: \"black\",\r\n        textShadowColor: \"white\",\r\n        borderRadius: 35,\r\n    },\r\n    subText: {\r\n        fontSize: 15,\r\n        marginLeft: 18,\r\n        marginTop: 10,\r\n        textAlign: \"center\"\r\n    },\r\n    logoStyle: {\r\n        marginLeft: 125,\r\n        marginTop: 100,\r\n        height: 140,\r\n        width: 130,\r\n        marginBottom: 20\r\n    }\r\n});\r\n\r\nexport default LoginScreen;"]},"metadata":{},"sourceType":"module"}