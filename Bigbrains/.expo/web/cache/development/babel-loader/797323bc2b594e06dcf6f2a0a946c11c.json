{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"F:\\\\BigBrains-Mobile\\\\Bigbrains\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppLoading from 'expo-app-loading';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport AppNavigator from \"./navigation/AppNavigator\";\nimport AuthNavigator from \"./navigation/AuthNavigator\";\nexport default function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      IsReady = _useState4[0],\n      setIsReady = _useState4[1];\n\n  var RestoreUser = function RestoreUser() {\n    var token;\n    return _regeneratorRuntime.async(function RestoreUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('token'));\n\n          case 2:\n            token = _context.sent;\n\n            if (token) {\n              setUser(true);\n            } else {\n              setUser(false);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  if (!IsReady) {\n    return React.createElement(AppLoading, {\n      startAsync: RestoreUser,\n      onFinish: function onFinish() {\n        return setIsReady(true);\n      },\n      onError: function onError() {},\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, !user ? React.createElement(AppNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 16\n    }\n  }) : React.createElement(AuthNavigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 35\n    }\n  }));\n}","map":{"version":3,"sources":["F:/BigBrains-Mobile/Bigbrains/App.js"],"names":["React","useEffect","useState","NavigationContainer","AppLoading","AsyncStorage","AppNavigator","AuthNavigator","App","user","setUser","IsReady","setIsReady","RestoreUser","getItem","token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,YAAP;AACA,OAAOC,aAAP;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBACJN,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,MACrBO,IADqB;AAAA,MACfC,OADe;;AAAA,mBAEER,QAAQ,CAAC,KAAD,CAFV;AAAA;AAAA,MAErBS,OAFqB;AAAA,MAEZC,UAFY;;AAG5B,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACER,YAAY,CAACS,OAAb,CAAqB,OAArB,CADF;;AAAA;AACZC,YAAAA,KADY;;AAElB,gBAAIA,KAAJ,EAAW;AACTL,cAAAA,OAAO,CAAC,IAAD,CAAP;AACD,aAFD,MAEO;AACLA,cAAAA,OAAO,CAAC,KAAD,CAAP;AACD;;AANiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AASA,MAAI,CAACC,OAAL,EAAc;AACZ,WACE,oBAAC,UAAD;AACE,MAAA,UAAU,EAAEE,WADd;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMD,UAAU,CAAC,IAAD,CAAhB;AAAA,OAFZ;AAGE,MAAA,OAAO,EAAE,mBAAM,CAAE,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD;;AAED,SACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACH,IAAD,GAAQ,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAR,GAA2B,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,CADF;AAKD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport AppLoading from 'expo-app-loading';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport AppNavigator from './navigation/AppNavigator';\nimport AuthNavigator from './navigation/AuthNavigator';\n\nexport default function App() {\n  const [user, setUser] = useState('');\n  const [IsReady, setIsReady] = useState(false);\n  const RestoreUser = async () => {\n    const token = await AsyncStorage.getItem('token');\n    if (token) {\n      setUser(true);\n    } else {\n      setUser(false);\n    }\n  };\n\n  if (!IsReady) {\n    return (\n      <AppLoading\n        startAsync={RestoreUser}\n        onFinish={() => setIsReady(true)}\n        onError={() => {}}\n      />\n    );\n  }\n\n  return (\n    <NavigationContainer>\n      {!user ? <AppNavigator /> : <AuthNavigator />}\n    </NavigationContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}