{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"F:\\\\BigBrains-Mobile\\\\Bigbrains\\\\screens\\\\SignupScreen.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Button, TextInput } from 'react-native-paper';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar SignupScreen = function SignupScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password = _useState6[0],\n      setPassword = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      organization = _useState8[0],\n      setOrganization = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      role = _useState10[0],\n      setRole = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      country = _useState12[0],\n      setCountry = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      intro = _useState14[0],\n      setIntro = _useState14[1];\n\n  var sendCredentials = function sendCredentials() {\n    return _regeneratorRuntime.async(function sendCredentials$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            fetch(\"https://bbrains.herokuapp.com/signup\", {\n              method: \"POST\",\n              headers: {\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                \"name\": name,\n                \"email\": email,\n                \"password\": password,\n                \"country\": country,\n                \"organization\": organization,\n                \"role\": role,\n                \"intro\": intro\n              })\n            }).then(function (res) {\n              return res.json();\n            }).then(function (data) {\n              try {\n                AsyncStorage.setItem('token', data.token);\n              } catch (e) {\n                console.log(e);\n              }\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.mainD,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    behavior: \"position\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, React.createElement(StatusBar, {\n    style: \"dark\",\n    backgroundColor: \"black\",\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), React.createElement(Image, {\n    style: styles.logoStyle,\n    source: require(\"../assets/logoBlack.png\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), React.createElement(Text, {\n    style: styles.intro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \" Create Account.\"), React.createElement(Text, {\n    style: styles.subIntro,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Sign up to get started!\"), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    label: \"Name\",\n    mode: \"flat\",\n    value: name,\n    onChangeText: function onChangeText(text) {\n      return setName(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    label: \"Email\",\n    mode: \"flat\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    label: \"Password\",\n    mode: \"flat\",\n    secureTextEntry: true,\n    value: password,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    label: \"Organization\",\n    mode: \"flat\",\n    value: organization,\n    onChangeText: function onChangeText(text) {\n      return setOrganization(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    label: \"Role\",\n    mode: \"flat\",\n    value: role,\n    onChangeText: function onChangeText(text) {\n      return setRole(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    label: \"Country\",\n    mode: \"flat\",\n    value: country,\n    onChangeText: function onChangeText(text) {\n      return setCountry(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    style: styles.textInpStyle,\n    theme: {\n      colors: {\n        primary: \"red\"\n      }\n    },\n    label: \"Into\",\n    mode: \"flat\",\n    value: intro,\n    onChangeText: function onChangeText(text) {\n      return setIntro(text);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), React.createElement(Button, {\n    style: styles.btnStyle,\n    mode: \"contained\",\n    onPress: function onPress() {\n      return sendCredentials();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"SIGN UP\"), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.subText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"I'm already a member \", React.createElement(Text, {\n    onPress: function onPress() {\n      return props.navigation.navigate(\"login\");\n    },\n    style: styles.spIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 62\n    }\n  }, \" Sign In\"), \" \"))));\n};\n\nvar styles = StyleSheet.create({\n  mainD: {\n    backgroundColor: 'white'\n  },\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  intro: {\n    fontSize: 30,\n    marginLeft: 14,\n    marginTop: 10,\n    color: \"#3b3b3b\",\n    fontWeight: \"bold\"\n  },\n  spIn: {\n    fontWeight: \"bold\",\n    color: \"blue\"\n  },\n  subIntro: {\n    marginTop: 8,\n    marginBottom: 10,\n    fontSize: 20,\n    marginLeft: 22,\n    color: \"black\"\n  },\n  selfClosing: {\n    borderBottomColor: \"red\",\n    borderBottomWidth: 2,\n    marginLeft: 18,\n    marginRight: 70,\n    marginTop: 0,\n    marginBottom: 10\n  },\n  titleM: {\n    fontSize: 20,\n    marginLeft: 18,\n    textAlign: \"center\",\n    marginTop: 5\n  },\n  textInpStyle: {\n    marginLeft: 18,\n    marginRight: 18,\n    marginTop: 2,\n    backgroundColor: \"white\",\n    height: 50,\n    width: \"auto\",\n    borderWidth: 0\n  },\n  btnStyle: {\n    marginLeft: 18,\n    marginRight: 18,\n    marginTop: 10,\n    backgroundColor: \"black\",\n    textShadowColor: \"white\",\n    borderRadius: 35\n  },\n  subText: {\n    fontSize: 15,\n    marginLeft: 18,\n    marginTop: 10,\n    textAlign: \"center\"\n  },\n  logoStyle: {\n    marginLeft: 125,\n    marginTop: 50,\n    height: 140,\n    width: 130\n  }\n});\nexport default SignupScreen;","map":{"version":3,"sources":["F:/BigBrains-Mobile/Bigbrains/screens/SignupScreen.js"],"names":["StatusBar","React","useState","Button","TextInput","AsyncStorage","SignupScreen","props","name","setName","email","setEmail","password","setPassword","organization","setOrganization","role","setRole","country","setCountry","intro","setIntro","sendCredentials","fetch","method","headers","body","JSON","stringify","then","res","json","data","setItem","token","e","console","log","styles","mainD","logoStyle","require","subIntro","textInpStyle","colors","primary","text","btnStyle","subText","navigation","navigate","spIn","StyleSheet","create","backgroundColor","container","flex","alignItems","justifyContent","fontSize","marginLeft","marginTop","color","fontWeight","marginBottom","selfClosing","borderBottomColor","borderBottomWidth","marginRight","titleM","textAlign","height","width","borderWidth","textShadowColor","borderRadius"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity, KeyboardAvoidingView, Image } from 'react-native';\r\nimport { Button, TextInput } from 'react-native-paper';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n// <View style={styles.container}>\r\nconst SignupScreen = (props) => {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [organization, setOrganization] = useState('');\r\n  const [role, setRole] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [intro, setIntro] = useState('');\r\n\r\n  const sendCredentials = async () => {\r\n    fetch(\"https://bbrains.herokuapp.com/signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        \"name\": name,\r\n        \"email\": email,\r\n        \"password\": password,\r\n        \"country\": country,\r\n        \"organization\": organization,\r\n        \"role\": role,\r\n        \"intro\": intro\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        try {\r\n           AsyncStorage.setItem('token', data.token)\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n\r\n      })\r\n\r\n  }\r\n\r\n  return (\r\n    <View style={styles.mainD}>\r\n      <KeyboardAvoidingView behavior=\"position\">\r\n        <StatusBar style=\"dark\" backgroundColor=\"black\" barStyle=\"light-content\" />\r\n        <Image style={styles.logoStyle} source={require('../assets/logoBlack.png')} />\r\n        <Text style={styles.intro}> Create Account.</Text>\r\n        <Text style={styles.subIntro}>Sign up to get started!</Text>\r\n        <TextInput style={styles.textInpStyle} theme={{ colors: { primary: \"red\" } }}\r\n          label=\"Name\" mode=\"flat\" value={name} onChangeText={(text) => setName(text)} />\r\n        <TextInput style={styles.textInpStyle} theme={{ colors: { primary: \"red\" } }}\r\n          label=\"Email\" mode=\"flat\" value={email} onChangeText={(text) => setEmail(text)} />\r\n        <TextInput style={styles.textInpStyle} theme={{ colors: { primary: \"red\" } }}\r\n          label=\"Password\" mode=\"flat\" secureTextEntry={true} value={password} onChangeText={(text) => setPassword(text)} />\r\n        <TextInput style={styles.textInpStyle} theme={{ colors: { primary: \"red\" } }}\r\n          label=\"Organization\" mode=\"flat\" value={organization} onChangeText={(text) => setOrganization(text)} />\r\n        <TextInput style={styles.textInpStyle} theme={{ colors: { primary: \"red\" } }}\r\n          label=\"Role\" mode=\"flat\" value={role} onChangeText={(text) => setRole(text)} />\r\n        <TextInput style={styles.textInpStyle} theme={{ colors: { primary: \"red\" } }}\r\n          label=\"Country\" mode=\"flat\" value={country} onChangeText={(text) => setCountry(text)} />\r\n        <TextInput style={styles.textInpStyle} theme={{ colors: { primary: \"red\" } }}\r\n          label=\"Into\" mode=\"flat\" value={intro} onChangeText={(text) => setIntro(text)} />\r\n        <Button style={styles.btnStyle} mode=\"contained\" onPress={() => sendCredentials()}>\r\n          SIGN UP\r\n  </Button>\r\n        <TouchableOpacity>\r\n          <Text style={styles.subText} >I'm already a member <Text onPress={() => props.navigation.navigate(\"login\")} style={styles.spIn}> Sign In</Text> </Text>\r\n        </TouchableOpacity>\r\n      </KeyboardAvoidingView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  mainD: {\r\n    backgroundColor: 'white',\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: 'white',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  intro: {\r\n    fontSize: 30,\r\n    marginLeft: 14,\r\n    marginTop: 10,\r\n    color: \"#3b3b3b\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  spIn: {\r\n    fontWeight: \"bold\",\r\n    color: \"blue\"\r\n  },\r\n  subIntro: {\r\n    marginTop: 8,\r\n    marginBottom: 10,\r\n    fontSize: 20,\r\n    marginLeft: 22,\r\n    color: \"black\"\r\n  },\r\n  selfClosing: {\r\n    borderBottomColor: \"red\",\r\n    borderBottomWidth: 2,\r\n    marginLeft: 18,\r\n    marginRight: 70,\r\n    marginTop: 0,\r\n    marginBottom: 10\r\n  },\r\n  titleM: {\r\n    fontSize: 20,\r\n    marginLeft: 18,\r\n    textAlign: \"center\",\r\n    marginTop: 5,\r\n  },\r\n  textInpStyle: {\r\n    marginLeft: 18,\r\n    marginRight: 18,\r\n    marginTop: 2,\r\n    backgroundColor: \"white\",\r\n    height: 50,\r\n    width: \"auto\",\r\n    borderWidth: 0,\r\n  },\r\n  btnStyle: {\r\n    marginLeft: 18,\r\n    marginRight: 18,\r\n    marginTop: 10,\r\n    backgroundColor: \"black\",\r\n    textShadowColor: \"white\",\r\n    borderRadius: 35\r\n  },\r\n  subText: {\r\n    fontSize: 15,\r\n    marginLeft: 18,\r\n    marginTop: 10,\r\n    textAlign: \"center\"\r\n  },\r\n  logoStyle: {\r\n    marginLeft: 125,\r\n    marginTop: 50,\r\n    height: 140,\r\n    width: 130\r\n  }\r\n});\r\n\r\nexport default SignupScreen;"]},"metadata":{},"sourceType":"module"}